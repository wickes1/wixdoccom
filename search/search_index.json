{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to WixDocCom","text":"<p>This is a personal Wiki and Blog.</p>"},{"location":"#why-this-site-exists","title":"Why this site exists?","text":"<p>To write down things that I quickly forget.</p>"},{"location":"#about-me","title":"About me","text":"<p>GitHub </p>"},{"location":"tags/","title":"Tags and Categories","text":""},{"location":"tags/#digital-signage","title":"Digital Signage","text":"<ul> <li>Build a Digital Signage with Magic Mirror</li> </ul>"},{"location":"tags/#magicmirror","title":"MagicMirror","text":"<ul> <li>Build a Digital Signage with Magic Mirror</li> </ul>"},{"location":"tags/#today-i-learned","title":"Today I Learned","text":"<ul> <li>Arch Linux</li> <li>Cloudflare</li> <li>Docker Compose</li> <li>Gitleaks</li> </ul>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2023/11/build-digital-signage-magic-mirror/","title":"Build a Digital Signage with Magic Mirror","text":"<p>If you have a spare monitor, you can build a digital signage with MagicMirror. MagicMirror is an open source project that allows you to display information on a monitor. You can display the weather, news, calendar, and more.</p>","tags":["MagicMirror","Digital Signage"]},{"location":"blog/2023/11/build-digital-signage-magic-mirror/#quick-start","title":"Quick Start","text":"<p>MagicMirror is mainly built and tested with Raspberry Pi. However, for the purpose of better demonstration how to configure your own module, in this article, we will run source code with Node.js 18 to serve a web page.</p> <p>Note</p> <p>You can use fnm to install Node.js 18.</p> <pre><code># Clone the repository\ngit clone https://github.com/MichMich/MagicMirror.git\ncd MagicMirror/\nnpm run install-mm:dev\ncp config/config.js.sample config/config.js\n\n# Run the server and open http://0.0.0.0:8080 in your browser\nnpm run server\n# or run with electron app\nnpm run start\n</code></pre>","tags":["MagicMirror","Digital Signage"]},{"location":"blog/2023/11/build-digital-signage-magic-mirror/#configuration","title":"Configuration","text":"<p>MagicMirror is highly configurable. You can change the position of modules, add new modules, and more. You can find the configuration file at <code>config/config.js</code>. Let's start with a basic <code>config.js</code> showing only the clock module.</p> config.js<pre><code>let config = {\n    address: \"0.0.0.0\",\n    port: 8080,\n    basePath: \"/\",\n    ipWhitelist: [],\n    useHttps: false,\n    language: \"en\",\n    locale: \"en-US\",\n    logLevel: [\"INFO\", \"LOG\", \"WARN\", \"ERROR\"], // Add \"DEBUG\" for even more logging\n    timeFormat: 24,\n    units: \"metric\",\n    modules: [\n        {\n            module: \"clock\",\n            position: \"top_left\"\n        }\n    ]\n};\n\n/*************** DO NOT EDIT THE LINE BELOW ***************/\nif (typeof module !== \"undefined\") {\n    module.exports = config;\n}\n</code></pre> <p>You shall see the changes after you refresh the page.</p> <p>Notice that we have added a default module <code>clock</code> to the <code>modules</code> array. The default modules are provided by MagicMirror, you can more configuration option for <code>clock</code> here.</p>","tags":["MagicMirror","Digital Signage"]},{"location":"blog/2023/11/build-digital-signage-magic-mirror/#adding-more-default-modules","title":"Adding more default modules","text":"","tags":["MagicMirror","Digital Signage"]},{"location":"blog/2023/11/build-digital-signage-magic-mirror/#newsfeed","title":"Newsfeed","text":"<p>We can add a <code>newsfeed</code> module to display the latest news from New York Times. Add the following configuration to the <code>modules</code> array.</p> <p>You can add or change the feeds to your favorite RSS source by editing <code>title</code> and <code>url</code>.</p> config.js<pre><code>        {\n            module: \"newsfeed\",\n            position: \"bottom_bar\",\n            animateIn: \"slideInLeft\",\n            animateOut: \"slideOutRight\",\n            config: {\n                feeds: [\n                    {\n                        title: \"New York Times\",\n                        url: \"https://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml\"\n                    }\n                ],\n                showSourceTitle: true,\n                showPublishDate: true,\n                broadcastNewsFeeds: true,\n                broadcastNewsUpdates: true\n            }\n        }\n</code></pre> <p>Notice that we have configured <code>animateIn</code> and <code>animateOut</code> to make the newsfeed slide in and out. There are more common module arguments you can use, you can find them here.</p>","tags":["MagicMirror","Digital Signage"]},{"location":"blog/2023/11/build-digital-signage-magic-mirror/#weather","title":"Weather","text":"<p>Now we are going to add the <code>weather</code> module for displaying both current and 7 days forecast weather. Change the <code>lat</code> and <code>lon</code> to your location.</p> config.js<pre><code>        {\n            module: \"weather\",\n            position: \"top_right\",\n            config: {\n                weatherProvider: \"openmeteo\",\n                type: \"current\",\n                // Open-Meteo Required Settings\n                apiBase: \"https://api.open-meteo.com/v1\",\n                lat: 43.65107,\n                lon: -79.347015\n            }\n        },\n        {\n            module: \"weather\",\n            position: \"top_right\",\n            config: {\n                weatherProvider: \"openmeteo\",\n                type: \"forecast\",\n                maxNumberOfDays: 7,\n                // Open-Meteo Required Settings\n                apiBase: \"https://api.open-meteo.com/v1\",\n                lat: 43.65107,\n                lon: -79.347015\n            }\n        }\n</code></pre> <p>The default configuration is using <code>openweathermap</code> as the weather provider, which will require an API key to retrieve data. In order to avoid the hassle of getting an API key, we are going to use <code>openmeteo</code> as the weather provider.</p>","tags":["MagicMirror","Digital Signage"]},{"location":"blog/2023/11/build-digital-signage-magic-mirror/#calendar","title":"Calendar","text":"<p>We can also add a <code>calendar</code> module to display the upcoming events from any <code>ics</code> file.</p> config.js<pre><code>        {\n            module: \"calendar\",\n            header: \"Ontraio Holidays\",\n            position: \"top_left\",\n            config: {\n                calendars: [\n                    {\n                        url: \"https://canada-holidays.ca/ics/ON\",\n                        symbol: \"calendar\"\n                    }\n                ]\n            }\n        }\n</code></pre>","tags":["MagicMirror","Digital Signage"]},{"location":"blog/2023/11/build-digital-signage-magic-mirror/#adding-custom-modules","title":"Adding custom modules","text":"","tags":["MagicMirror","Digital Signage"]},{"location":"blog/2023/11/build-digital-signage-magic-mirror/#mmm-weatherbackground","title":"MMM-WeatherBackground","text":"<p>Notice that the default background of MagicMirror is black, this is because MagicMirror is designed to be used for smart mirror, which require a black background to reflect the monitor. However, we can change the background to a weather background by installing a custom module.</p> <p>MagicMirror Module \u2013 Displays a background from Unsplash based upon your weather module. This module requires a working weather module to function.</p> <pre><code>git clone https://github.com/BrianHepler/MMM-WeatherBackground.git modules/MMM-WeatherBackground\n</code></pre> <p>We have cloned the module to <code>modules</code> folder, now let's configure the module in <code>config.js</code>.</p> config.js<pre><code>        {\n            module: \"MMM-WeatherBackground\",\n            config: {\n                verbose: false, // If you want to leave some log message, set this as true\n                source: \"weather\", // \"weather\", \"MMM-NOAA3\", \"MMM-DarkskyForecast\".  If you want to use different source, manually set `notification` and `payloadConverter`\n                size: null, // \"1920x480\", whatever....\n                hemisphere: \"n\", // 'n', 's' or null/false  (For backward compatibility) // will be deprecated. use monthMap instead.\n                monthMap: [\"NewYear\", \"winter\", \"spring\", \"spring flower\", \"joy\", \"summer rain\", \"summer beach\", \"summer vacation\", \"autumn\", \"autumn leaves\", \"winter\", \"christmas\"], // set your custom keyword for each month.\n                //monthMap: ['winter', 'winter', 'spring', 'spring', 'spring', 'summer', 'summer', 'summer', 'autumn', 'autumn', 'autumn', 'winter'],//\n                //monthMap: null, false, or []\n                targetDOM: \".fullscreen.below\", //null or DomSelector for target. (if null, weather will be targeted.)\n                notification: null, // when you need another `source` from `source, modify this.\n                payloadConverter: null, // your custom payloadConverter callback.\n                defaultCollection: null, // When matched collection not found, this will be used.\n                externalCollections: \"collections.json\", // or null. // I recommend you rename this file to prevent update-conflicts.\n                collections: {} // This will be combined with externalCollections. (For backward compatibility)\n            }\n        }\n</code></pre> <p>Since we have configured <code>weather</code> module, the <code>MMM-WeatherBackground</code> will automatically use the weather data to search for a background image in Unsplash.</p>","tags":["MagicMirror","Digital Signage"]},{"location":"blog/2023/11/build-digital-signage-magic-mirror/#mmm-backgroundyoutube","title":"MMM-BackgroundYouTube","text":"<p><code>MMM-BackgroundYouTube</code> is a simple module that allows you to use a YouTube video as your background with a <code>videoID</code>. This module will be conflict with <code>MMM-WeatherBackground</code>, so we will disable the <code>MMM-WeatherBackground</code> module.</p> <pre><code># In your MagicMirror directory\ngit submodule add -f https://github.com/wickes1/MMM-BackgroundYouTube.git modules/MMM-BackgroundYouTube\n</code></pre> config.js<pre><code>        {\n            module: \"MMM-BackgroundYouTube\",\n            position: \"fullscreen_below\",\n            config: {\n                videoID: \"jfKfPfyJRdk\"\n            }\n        }\n</code></pre> <p>After refresh the page, you shall see the YouTube video playing in the background. The video is muted and looped.</p> <p>Notice that some common issues when embedding YouTube video in a web page, find more information here if your video is not playing.</p>","tags":["MagicMirror","Digital Signage"]},{"location":"blog/2023/11/build-digital-signage-magic-mirror/#custom-css","title":"Custom CSS","text":"<p>Since MagicMirror is designed to be used for smart mirror, the default style is not suitable for digital signage. We will customize the style for brighter text.</p> <p>To customize the style of the modules in global, you can add custom CSS to <code>css/custom.css</code>.</p> css/custom.css<pre><code>:root {\n  --color-text: #999;\n  --color-text-dimmed: #666;\n  --color-text-bright: #fff;\n  --color-background: black;\n\n  --font-primary: \"Roboto Condensed\";\n  --font-secondary: \"Roboto\";\n\n  --font-size: 20px;\n  --font-size-small: 0.75rem;\n\n  --gap-body-top: 60px;\n  --gap-body-right: 60px;\n  --gap-body-bottom: 60px;\n  --gap-body-left: 60px;\n\n  --gap-modules: 30px;\n}\n\n.normal,\n.dimmed,\nheader,\nbody {\n  color: #fff;\n}\n\n.module-content{\n  overflow: hidden;\n}\n</code></pre> <p>After refresh the page, you shall see the brighter text now.</p>","tags":["MagicMirror","Digital Signage"]},{"location":"blog/2023/11/build-digital-signage-magic-mirror/#conclusion","title":"Conclusion","text":"<p>In this article, we have learned how to build a digital signage with MagicMirror. MagicMirror is highly configurable and extensible, you can not only display the information, but also embedding voice assistant. Check out the 3rd Party Module for building a more powerful digital signage!</p> <p>Find the source code of this article on GitHub Gist.</p>","tags":["MagicMirror","Digital Signage"]},{"location":"til/","title":"\ud83d\uddd3\ufe0f Today I Learned","text":"<p>This is the collection of things I learned every day.</p> <p>Inspired by</p> <ul> <li>GitHub - jbranchaud/til:  Today I Learned</li> <li>GitHub - SimonMarquis/TIL: \ud83d\uddd3\ufe0f Today I Learned</li> </ul> <p>Rules to follow</p> <ul> <li>The post could be reused in the future, like a handbook.</li> <li>The post could be useful to others, meant to be shared.</li> <li>The post should be short and concise, no more than 1 minute to read and understand in a section.</li> <li>The post should also be easy to write, no more than 5 minutes to write in a section.</li> <li>If external blog/documentation is available, link to it instead of writing it down.</li> <li>Something better than wrong things, but wrong things are better than nothing.</li> </ul>"},{"location":"til/arch-linux/","title":"Arch Linux","text":"","tags":["Today I Learned"]},{"location":"til/arch-linux/#change-dns-server","title":"Change DNS Server","text":"<pre><code># view current dns server\ncat /etc/resolv.conf\n\n# check available connection\nnmcli con\nexport connectionName=\"Wired connection 1\"\n\n# set dns server to cloudflare\nnmcli con mod $connectionName ipv4.dns \"1.1.1.1 1.0.0.1\"\nnmcli con mod $connectionName ipv4.ignore-auto-dns yes\nnmcli con mod $connectionName ipv6.dns \"2606:4700:4700::1111 2606:4700:4700::1001\"\nnmcli con mod $connectionName ipv6.ignore-auto-dns yes\n\n# restart\nsudo systemctl restart NetworkManager\n</code></pre>","tags":["Today I Learned"]},{"location":"til/arch-linux/#run-job-in-background","title":"Run Job in Background","text":"<pre><code># run job in background\nnohup &lt;command&gt; &amp;\ndisown\n</code></pre>","tags":["Today I Learned"]},{"location":"til/cloudflare/","title":"Cloudflare","text":"","tags":["Today I Learned"]},{"location":"til/cloudflare/#github-pages-custom-domain-with-cloudflare","title":"GitHub Pages Custom Domain with Cloudflare","text":"<p>Cloudflare did not provide bulk DNS record deletion, so we need to use Cloudflare API to achieve bulk delete DNS records.</p> <p>Install <code>cloudflare</code> package</p> <pre><code>pip install cloudflare\n</code></pre> <p>Get the Global API Key from Cloudflare User API Tokens</p> <p>Run the script with environment variables</p> <pre><code>export CLOUDFLARE_EMAIL='user@example.com'\nexport CLOUDFLARE_API_KEY='00000000000000000000000000000000'\nexport ZONE_NAME='example.com'\nexport GITHUB_USERNAME='user'\ncurl -s https://gist.githubusercontent.com/wickes1/97b67746d63bd83aab8571e0d6010173/raw/205942dc4b377891a53496a65c859282c521c38f/register-cloudflare-github-pages.py | poetry run python - -z $ZONE_NAME -n $GITHUB_USERNAME\n</code></pre> <p>References</p> <ul> <li>Cloudflare API</li> <li>Cloudflare Python API</li> </ul>","tags":["Today I Learned"]},{"location":"til/cloudflare/#dns-propagation","title":"DNS Propagation","text":"<p>DNS propagation needs time, we can check the status of DNS propagation with different tools.</p> <p>Web tools</p> <ul> <li>Google Admin Toolbox</li> <li>DNS Checker</li> <li>DNSViz</li> </ul> <p>CLI tools</p> <pre><code>dig www.wix-doc.com +nostats +nocomments +nocmd\nnslookup www.wix-doc.com\nping www.wix-doc.com\ntraceroute -I -e www.wix-doc.com\n</code></pre> <p>We can also request the DNS to flush the cache.</p> <ul> <li>Google Public DNS Flush Cache</li> <li>1.1.1.1 Purge Cache</li> </ul> <p>References</p> <ul> <li>DNS Propagation \u2013 Explained - Domains - Namecheap.com</li> </ul>","tags":["Today I Learned"]},{"location":"til/cloudflare/#is-my-website-cached-by-cloudflare","title":"Is my website cached by Cloudflare?","text":"<p>Check the <code>X-Cache</code> header.</p> <p><code>F12</code> \u2192 <code>Network</code> \u2192 <code>F5</code> \u2192 <code>www.domain.com</code> \u2192 <code>Response Headers</code> \u2192 <code>X-Cache</code></p> <p></p>","tags":["Today I Learned"]},{"location":"til/docker-compose/","title":"Docker Compose","text":"","tags":["Today I Learned"]},{"location":"til/docker-compose/#docker-compose-vs-docker-compose","title":"<code>docker-compose</code> vs <code>docker compose</code>","text":"<p>As mentioned in Migrate to Compose V2, the <code>docker-compose</code> command is now part of Docker Engine.</p> <p>The V1 <code>docker-compose</code> is built on Python, and the V2 <code>docker compose</code> is built on Golang.</p> <pre><code># check your docker compose version\ndocker compose version\n</code></pre>","tags":["Today I Learned"]},{"location":"til/docker-compose/#usage","title":"Usage","text":"<pre><code># remove all containers, networks, images, and volumes\ndocker compose down --rmi all --volumes\n</code></pre>","tags":["Today I Learned"]},{"location":"til/docker-compose/#use-a-pre-existing-network","title":"Use a pre-existing network","text":"<p>Use <code>external</code> and <code>name</code> to use a pre-existing network.</p> <pre><code>services:\n  # ...\nnetworks:\n  network1:\n    name: my-pre-existing-network\n    external: true\n</code></pre>","tags":["Today I Learned"]},{"location":"til/gitleaks/","title":"Gitleaks","text":"<p>Gitleaks is a CLI tool for detecting secrets in git repositories.</p>","tags":["Today I Learned"]},{"location":"til/gitleaks/#usage","title":"Usage","text":"<pre><code># install\nyay -S gitleaks\n\n# scan current directory\ngitleaks detect --source . -v\n</code></pre>","tags":["Today I Learned"]},{"location":"blog/archive/2023/11/","title":"November 2023","text":""},{"location":"tags/","title":"Tags and Categories","text":""},{"location":"tags/#digital-signage","title":"Digital Signage","text":"<ul> <li>Build a Digital Signage with Magic Mirror</li> </ul>"},{"location":"tags/#magicmirror","title":"MagicMirror","text":"<ul> <li>Build a Digital Signage with Magic Mirror</li> </ul>"},{"location":"tags/#today-i-learned","title":"Today I Learned","text":"<ul> <li>Arch Linux</li> <li>Cloudflare</li> <li>Docker Compose</li> <li>Gitleaks</li> </ul>"}]}